
user  root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
worker_connections  1024;
}


http {
include       mime.types;
default_type  application/octet-stream;
#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                  '$status $body_bytes_sent "$http_referer" '
#                  '"$http_user_agent" "$http_x_forwarded_for"';

#access_log  logs/access.log  main;

sendfile        on;
#tcp_nopush     on;

#keepalive_timeout  0;
keepalive_timeout  65;

#gzip  on;

server {
    listen       80;
    server_name  localhost;


    #平台
    location / {
     	 root  /zq100/nginx-1.19.6/html/platform/;
           index index.html; 
    }



    #执法
#    location /netpolice/ {
##         alias  /zq100/data/netpolice/;
##         try_files $uri $uri/ /zq100/data/netpolice/index.html;  # 外部我的项目跳转门路
#		
#    }




    #执法
    location /netpolice/ {
        alias  /zq100/data/netpolice/;
 	    try_files $uri $uri/ /index.html;
    }



   
    #平台
    location /itemApi/ {
        #rewrite  ^.+api/?(.*)$ /$1 break;
        proxy_pass  http://192.168.1.83:8080/;    #node api server 即需要代理的IP地址
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }



    #执法
    location /api/ {
        #rewrite  ^.+api/?(.*)$ /$1 break;
        proxy_pass  http://192.168.1.83:8084/;    #node api server 即需要代理的IP地址
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }



    #执法跳转平台
    location /platform/ {
        #rewrite  ^.+api/?(.*)$ /$1 break;
        proxy_pass  http://192.168.1.83:8080/;    #node api server 即需要代理的IP地址
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

  }

}
